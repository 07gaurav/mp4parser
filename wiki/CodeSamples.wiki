#summary This page provides some code samples to get you started

== Opening a file ==

{{{
FileRandomAccessDataSource dataSource = null;
try {
  dataSource = new FileRandomAccessDataSource(file);
  IsoFile isoFile = new IsoFile(dataSource);

  isoFile.parse();
  isoFile.parseMdats();
  List<?> boxContainers = Arrays.asList(isoFile.getBoxes());

  // info: add code to read data from boxes here

} 
catch ( IOException ex ) {
  ex.printStackTrace();
}
finally {
  try {
    if ( dataSource != null ) {
      dataSource.close();
    }
  } 
  catch ( IOException ex ) {
     // info: ignore
  }
}
}}}

== Getting a Specific Box ==

This example shows how you can use an XPath style approach to get a Box

{{{

static void readFile(File file) throws IOException {

  FileRandomAccessDataSource dataSource = new FileRandomAccessDataSource(file);
  IsoFile isoFile = new IsoFile(dataSource);

  isoFile.parse();
  isoFile.parseMdats();
  List<?> boxContainers = Arrays.asList(isoFile.getBoxes());

  Box box =  (Box) get(isoFile, "/moov/udta/meta/ilst/Â©nam");
  if ( box instanceof AppleTrackTitleBox ) {
    AppleTrackTitleBox titleBox = (AppleTrackTitleBox) box;
    System.out.println("Track title: "  + titleBox.getTrackTitle());
  }
}

Object get(IsoFile isoFile, String path) {

  String[] parts = path.split("/");
  if (parts.length == 0) {
	return null;
  }

  List<String> partList = new ArrayList<String>(Arrays.asList(parts));

  if ("".equals(partList.get(0))) {
	partList.remove(0);
  }

  if (partList.size() > 0) {
	List<Box> boxes = Arrays.asList(isoFile.getBoxes()) ;
	
	return get(boxes, partList);
  }
  return null;
}

Object get(List<?> boxes, List<String> path) {

  Object get(List<?> boxes, List<String> path) {
  
  String typeInPath = path.remove(0);
  
  System.out.print("/" + typeInPath);
  
  for (Object object : boxes) {
    if (object instanceof BoxContainer) {
    BoxContainer boxContainer = (BoxContainer) object;
    String type = "";
    try {
      type = new String(boxContainer.getType(), "ISO-8859-1");
    } catch (UnsupportedEncodingException e) {
      type = new String(boxContainer.getType()) ;
    }
    
    if (typeInPath.equals(type)) {  
      List<Box> children = Arrays.asList(boxContainer.getBoxes());
      if ( path.size() > 0 ) {
      if ( children.size() > 0 ) {
        return get(children, path);
      }
      }
      else {
      return object;
      }
    }
  
    } else if (object instanceof Box) {
    Box box = (Box) object;
    String type = "";
    try {
      type = new String(box.getType(), "ISO-8859-1");
    } catch (UnsupportedEncodingException e) {
      type = new String(box.getType());
    }
    if ( path.size() == 0  && typeInPath.equals(type)) { 
      return object;
    }
   
    }
  
  }
  
  return null;
  }
}
}}}